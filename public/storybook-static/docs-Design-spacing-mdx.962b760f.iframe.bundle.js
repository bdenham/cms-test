"use strict";(self.webpackChunk_adobe_elsie=self.webpackChunk_adobe_elsie||[]).push([[1371],{"./src/docs/Design/spacing.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>spacing,tokenData:()=>tokenData,tokenNames:()=>tokenNames});__webpack_require__("../../node_modules/preact/compat/dist/compat.module.js");var jsx_runtime=__webpack_require__("../../node_modules/preact/compat/jsx-runtime.mjs"),lib=__webpack_require__("../../node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../../node_modules/@storybook/blocks/dist/index.mjs"),designBlocks=__webpack_require__("./src/docs/Design/designBlocks.jsx");const spacing_namespaceObject=JSON.parse('{"spacing":{"xxsmall":{"value":"4px"},"xsmall":{"value":"8px"},"small":{"value":"16px"},"medium":{"value":"24px"},"big":{"value":"32px"},"xbig":{"value":"40px"},"xxbig":{"value":"48px"},"large":{"value":"64px"},"xlarge":{"value":"72px"},"xxlarge":{"value":"96px"},"huge":{"value":"120px"},"xhuge":{"value":"144px"},"xxhuge":{"value":"192px"}}}');const tokenData=(0,__webpack_require__("./src/docs/Design/getTokenData.ts").w)(spacing_namespaceObject),tokenNames=tokenData.map((token=>token.name));function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p"},(0,lib.ah)(),props.components);return(0,jsx_runtime.BX)(jsx_runtime.HY,{children:[(0,jsx_runtime.tZ)(dist.h_,{title:"Design/Spacing"}),"\n",(0,jsx_runtime.BX)(dist.E$,{children:[(0,jsx_runtime.tZ)(_components.h1,{id:"spacing",children:"Spacing"}),(0,jsx_runtime.tZ)(_components.p,{children:"Use an incremental system to create harmonious arrangements with consistent visual balance and predictable rhythm to make the user interface easier for users to scan and identify relevant groups."}),(0,jsx_runtime.tZ)(designBlocks.nf,{tokenData}),(0,jsx_runtime.tZ)(designBlocks.gO,{children:(0,jsx_runtime.tZ)(designBlocks.Qk,{property:"width",tokens:tokenNames})})]})]})}const spacing=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.tZ)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.tZ)(_createMdxContent,props)})):_createMdxContent(props)}}}]);